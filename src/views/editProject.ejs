<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/editProject.css">

    <!-- GOOGLE FONTS -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap" rel="stylesheet">
    
    <!-- FONT AWESOME CDN -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    
    <script src="/utils/loadImage.js"></script>
    <script src="/utils/updateProjectImage.js"></script>
    <!-- AUTO RESIZE -->
    <script src="/utils/textAreaAutoResize.js" ></script>

    <title>Editar Projeto</title>
</head>
<body>
    <div class="main-header">
        <div class="home-container">
            <a href="/v1/"><p class="home-btn">Home</p></a>
        </div>
        <div class="academic-logo-container">
            <img src="/images/white-logo.png" alt="academic-logo" class="academic-logo">
        </div>
        <div class="back-container">
            <a class="back-btn" href="/v1/profile/<%= context.id %>/projects"><p class="edit-btn">Voltar</p></a>
        </div>
    </div>
    <div class="project-container">
        <form action="/v1/api/edit/project" id="form-data" class="form-data" method="POST" enctype="multipart/form-data">
            <div class="project-description-container">
                <div class="description-title">Descrição</div>
                <div class="desc-container">
                    <textarea name="" class="description" spellcheck="false"  oninput="autoGrow(this)" id=""><%= context.data[0].project_description %></textarea>
                </div>

            </div>
            <% if(context.data[0].image_data.length > 0){  %>
            <div class="project-image-group">
                <% for(let i=0; i< context.data[0].image_data.length; i++) { %>
                <div class="image-container im-<%= context.data[0].image_id[i] %>">
                    <div class="image-loaded il-<%= context.data[0].image_id[i] %>">
                        <img class="project-image image-<%= context.data[0].image_id[i] %>" src="data:<%= context.data[0].image_mimetype[i]%>;base64, <%= context.data[0].image_data[i].toString('base64')%>" alt="project-image">
                    </div>
                    <div class="alter-group ag-<%= context.data[0].image_id[i] %>">
                        <label for="alterImage" class="alter-image-label">
                            <input type="file" onChange="updateImage(event)" accept="image/*" name="ImageFile" id="alter-image" class="alter-image-<%= context.data[0].image_id[i] %>">
                        </label>
                        <i class="fa-solid fa-pen fa-xl update-icon" data-project-id="<%= context.data[0].image_id[i] %>"></i>
                        
                        <i class="fa-solid fa-trash fa-xl delete-icon" data-project-id="<%= context.data[0].image_id[i] %>"></i>
                    </div>
                </div>
                <% } %>
            </div>
            <% } %>

            <div class="save-container">
                <input type="submit" class="submit-btn" value="Salvar">
            </div>
        </form>
    </div>

    <script>
        let changed_img = new Set();
        let removed_obj = [];
        
        let removed_img = new Set();

        let locationHref = window.location.href.split('/');
        let project_id = locationHref[locationHref.length-1];

        document.addEventListener("DOMContentLoaded", () => {
            var textarea = document.querySelector('.description');
            autoGrow(textarea);
        })

        const updateIcon = document.querySelectorAll('.update-icon');
        const removeIcon = document.querySelectorAll('.delete-icon');
        const alterImageInputFile = document.querySelectorAll(`#alter-image`); 

        for(let i=0; i<removeIcon.length; i++){
            removed_obj.push(false);
            removeIcon[i].addEventListener('click', (e) => {
                let click = e.srcElement.parentNode.parentElement.className.split(' ')[1];
                let num = click.split('-')[1];

                let img_container = document.querySelector(`.${click}`);
                let img_loaded = document.querySelector(`.il-${num}`);
                let alter_group = document.querySelector(`.ag-${num}`);

                removed_img.add(Number(e.srcElement.dataset.projectId));
                removed_obj[i] = removed_obj[i] == false ? true : false;
                
                if(!removed_obj[i]){
                    removed_img.delete(Number(e.srcElement.dataset.projectId));
                }

                if(removed_obj[i]){
                    img_container.classList.add("image-container-removed");
                    img_loaded.classList.add("il-removed");
                }
                else{
                    img_container.classList.remove("image-container-removed");
                    img_loaded.classList.remove("il-removed");
                }
            })
        }

        for(let i=0; i<updateIcon.length; i++){
            updateIcon[i].addEventListener('click', ()=> {
                alterImageInputFile[i].click();
            })
        }

        for(ipt of alterImageInputFile){
            ipt.addEventListener('change', (e) => {
                changed_img.add(Number(e.target.className.split('-')[2]));
            })
        }

        document.querySelector("#form-data").addEventListener('submit', async(e) => {
            e.preventDefault();

            changed_img = Array.from(changed_img);
            removed_img = Array.from(removed_img);
            
            const data = new FormData();
            const textArea = document.querySelector('.description').value;
            data.append('project_description', textArea);
            data.append('changed_ids', JSON.stringify(changed_img));
            data.append('removed_ids', JSON.stringify(removed_img));
            data.append('project_id', project_id);

            const imageInput = document.querySelectorAll("#alter-image");
            /* 
                1. Percorre os campos de input[type="file"]
                e verifica qual deles está enviando arquivos.
                Os que possuirem dados a serem enviados, são add.
                ao formulário em data.append('ImageFile')
                    - O nome do campo deve ser
                    igual ao nome associado a tag html
            */
            for(ipt of imageInput){
                if(ipt.files[0]){
                    data.append('ImageFile', ipt.files[0])
                }
            }

            // Chamada para a API
            try {
                const response = await fetch('/v1/api/edit/project', {
                    method: 'PUT',
                    body: data,
                });
                
                if (response.ok) {
                    window.location.reload();

                } else {
                    console.error('Erro ao enviar dados para o servidor');
                }
            } catch (error) {
                console.error('Erro de rede:', error);
            }
        })

    </script>
</body>
</html>